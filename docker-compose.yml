version: '3'

services:
  postgres:
    image: postgres:11.9-alpine
    container_name: postgres
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/postgresql/data

  fusionauth:
    #image: fusionauth-app:latest
    image: fusionauth/fusionauth-app:1.22.0
    container_name: fusionauth
    depends_on:
      - postgres
    environment:
      #fusionauth configuration
      DATABASE_URL: jdbc:postgresql://postgres:5432/fusionauth
      DATABASE_ROOT_USERNAME: ${FA_POSTGRES_USER}
      DATABASE_ROOT_PASSWORD: ${FA_POSTGRES_PASSWORD}
      DATABASE_USERNAME: ${FA_DATABASE_USER}
      DATABASE_PASSWORD: ${FA_DATABASE_PASSWORD}
      FUSIONAUTH_APP_HTTP_PORT: 9011
      FUSIONAUTH_APP_MEMORY: 512M
      FUSIONAUTH_APP_RUNTIME_MODE: production
      FUSIONAUTH_APP_URL: http://fusionauth:9011
      SEARCH_TYPE: database
      #kickstart
      FUSIONAUTH_API_KEY: ${FA_API_KEY}
      ADMIN_EMAIL: ${FA_ADMIN_ACCOUNT}
      ADMIN_PASSWORD: ${FA_ADMIN_PASSWORD}
      VIDEOTEKA_TENANT_ID: ${FA_VIDEOTEKA_TENANT_ID}
      VIDEOTEKA_APP_ID: ${FA_VIDEOTEKA_APP_ID}
      FUSIONAUTH_APP_KICKSTART_FILE: /kickstart/kickstarter.json

    volumes:
      - fa_config:/usr/local/fusionauth/config
      - ./kickstart:/kickstart
    restart: unless-stopped
    
    
    
  fusionauth-microservice:
    build: .
    container_name: fusionauth-microservice
    ports:
      - "8085:8085"
    restart: always
    environment:
      server.port: 8085
      fusionAuth.apiKey: ${FA_API_KEY}
      fusionAuth.baseUrl: http://fusionauth:9011
      appId: ${FA_VIDEOTEKA_APP_ID}
      
    depends_on:
      - fusionauth
      
    links:
      - fusionauth

networks: 
  default: 
    external: 
      name: videoteka_network

volumes:
  db_data:
  fa_config:
